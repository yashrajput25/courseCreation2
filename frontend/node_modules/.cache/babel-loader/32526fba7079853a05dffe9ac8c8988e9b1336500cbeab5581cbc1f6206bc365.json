{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\Desktop\\\\web_dev\\\\capstoneProject\\\\frontend\\\\src\\\\components\\\\courseList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/courses/all\");\n        setCourses(response.data);\n      } catch (error) {\n        console.error(\"Error fetching courses\", error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), courses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No courses available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), course.videos.map((video, index) => {\n        let videoId = \"\";\n\n        // Extract YouTube Video ID from different URL formats\n        if (video.includes(\"youtube.com/watch?v=\")) {\n          var _video$split$;\n          videoId = (_video$split$ = video.split(\"v=\")[1]) === null || _video$split$ === void 0 ? void 0 : _video$split$.split(\"&\")[0];\n        } else if (video.includes(\"youtu.be/\")) {\n          var _video$split$2;\n          videoId = (_video$split$2 = video.split(\"youtu.be/\")[1]) === null || _video$split$2 === void 0 ? void 0 : _video$split$2.split(\"?\")[0];\n        }\n        return videoId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"300\",\n          height: \"200\",\n          src: `https://www.youtube.com/embed/${videoId}`,\n          title: `YouTube Video ${index + 1}`,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Invalid YouTube URL\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this);\n      })]\n    }, course._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseList, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CourseList;\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","CourseList","_s","courses","setCourses","fetchCourses","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","course","name","videos","video","index","videoId","includes","_video$split$","split","_video$split$2","width","height","src","title","frameBorder","allowFullScreen","style","color","_id","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/Desktop/web_dev/capstoneProject/frontend/src/components/courseList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseList = () => {\r\n    const [courses, setCourses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCourses = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:5001/api/courses/all\");\r\n                setCourses(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching courses\", error);\r\n            }\r\n        };\r\n        fetchCourses();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Available Courses</h2>\r\n            {courses.length === 0 ? (\r\n                <p>No courses available</p>\r\n            ) : (\r\n                courses.map((course) => (\r\n                    <div key={course._id}>\r\n                        <h3>{course.name}</h3>\r\n                        {course.videos.map((video, index) => {\r\n                            let videoId = \"\";\r\n\r\n                            // Extract YouTube Video ID from different URL formats\r\n                            if (video.includes(\"youtube.com/watch?v=\")) {\r\n                                videoId = video.split(\"v=\")[1]?.split(\"&\")[0];\r\n                            } else if (video.includes(\"youtu.be/\")) {\r\n                                videoId = video.split(\"youtu.be/\")[1]?.split(\"?\")[0];\r\n                            }\r\n\r\n                            return videoId ? (\r\n                                <iframe\r\n                                    key={index}\r\n                                    width=\"300\"\r\n                                    height=\"200\"\r\n                                    src={`https://www.youtube.com/embed/${videoId}`}\r\n                                    title={`YouTube Video ${index + 1}`}\r\n                                    frameBorder=\"0\"\r\n                                    allowFullScreen\r\n                                ></iframe>\r\n                            ) : (\r\n                                <p key={index} style={{ color: \"red\" }}>\r\n                                    Invalid YouTube URL\r\n                                </p>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourseList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}