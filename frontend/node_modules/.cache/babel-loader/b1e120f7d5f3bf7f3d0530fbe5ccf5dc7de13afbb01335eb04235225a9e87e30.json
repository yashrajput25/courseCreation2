{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const CourseList = () => {\n//     const [courses, setCourses] = useState([]);\n\n//     useEffect(() => {\n//         const fetchCourses = async () => {\n//             try {\n//                 const response = await axios.get(\"http://localhost:5001/api/courses/all\");\n//                 setCourses(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching courses\", error);\n//             }\n//         };\n//         fetchCourses();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h2>Available Courses</h2>\n//             {courses.length === 0 ? (\n//                 <p>No courses available</p>\n//             ) : (\n//                 courses.map((course) => (\n//                     <div key={course._id} style={{ border: \"1px solid #ddd\", padding: \"10px\", marginBottom: \"20px\" }}>\n//                         <h3>{course.name}</h3>\n\n//                         {/* Display YouTube Playlist if available */}\n//                         {course.playlistUrl ? (\n//                             <iframe\n//                                 width=\"560\"\n//                                 height=\"315\"\n//                                 src={`https://www.youtube.com/embed/videoseries?list=${course.playlistUrl.split(\"list=\")[1]}`}\n//                                 title=\"YouTube Playlist\"\n//                                 frameBorder=\"0\"\n//                                 allowFullScreen\n//                             ></iframe>\n//                         ) : (\n//                             // Otherwise, display individual videos\n//                             course.videos.map((video, index) => {\n//                                 let videoId = \"\";\n\n//                                 // Extract YouTube Video ID from different URL formats\n//                                 if (video.includes(\"youtube.com/watch?v=\")) {\n//                                     videoId = video.split(\"v=\")[1]?.split(\"&\")[0];\n//                                 } else if (video.includes(\"youtu.be/\")) {\n//                                     videoId = video.split(\"youtu.be/\")[1]?.split(\"?\")[0];\n//                                 }\n\n//                                 return videoId ? (\n//                                     <iframe\n//                                         key={index}\n//                                         width=\"300\"\n//                                         height=\"200\"\n//                                         src={`https://www.youtube.com/embed/${videoId}`}\n//                                         title={`YouTube Video ${index + 1}`}\n//                                         frameBorder=\"0\"\n//                                         allowFullScreen\n//                                     ></iframe>\n//                                 ) : (\n//                                     <p key={index} style={{ color: \"red\" }}>\n//                                         Invalid YouTube URL\n//                                     </p>\n//                                 );\n//                             })\n//                         )}\n//                     </div>\n//                 ))\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CourseList;","map":{"version":3,"names":[],"sources":["C:/Users/vaibh/Desktop/web_dev/Capstone/capstoneProject/frontend/src/components/courseList.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const CourseList = () => {\r\n//     const [courses, setCourses] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchCourses = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"http://localhost:5001/api/courses/all\");\r\n//                 setCourses(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching courses\", error);\r\n//             }\r\n//         };\r\n//         fetchCourses();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Available Courses</h2>\r\n//             {courses.length === 0 ? (\r\n//                 <p>No courses available</p>\r\n//             ) : (\r\n//                 courses.map((course) => (\r\n//                     <div key={course._id} style={{ border: \"1px solid #ddd\", padding: \"10px\", marginBottom: \"20px\" }}>\r\n//                         <h3>{course.name}</h3>\r\n\r\n//                         {/* Display YouTube Playlist if available */}\r\n//                         {course.playlistUrl ? (\r\n//                             <iframe\r\n//                                 width=\"560\"\r\n//                                 height=\"315\"\r\n//                                 src={`https://www.youtube.com/embed/videoseries?list=${course.playlistUrl.split(\"list=\")[1]}`}\r\n//                                 title=\"YouTube Playlist\"\r\n//                                 frameBorder=\"0\"\r\n//                                 allowFullScreen\r\n//                             ></iframe>\r\n//                         ) : (\r\n//                             // Otherwise, display individual videos\r\n//                             course.videos.map((video, index) => {\r\n//                                 let videoId = \"\";\r\n\r\n//                                 // Extract YouTube Video ID from different URL formats\r\n//                                 if (video.includes(\"youtube.com/watch?v=\")) {\r\n//                                     videoId = video.split(\"v=\")[1]?.split(\"&\")[0];\r\n//                                 } else if (video.includes(\"youtu.be/\")) {\r\n//                                     videoId = video.split(\"youtu.be/\")[1]?.split(\"?\")[0];\r\n//                                 }\r\n\r\n//                                 return videoId ? (\r\n//                                     <iframe\r\n//                                         key={index}\r\n//                                         width=\"300\"\r\n//                                         height=\"200\"\r\n//                                         src={`https://www.youtube.com/embed/${videoId}`}\r\n//                                         title={`YouTube Video ${index + 1}`}\r\n//                                         frameBorder=\"0\"\r\n//                                         allowFullScreen\r\n//                                     ></iframe>\r\n//                                 ) : (\r\n//                                     <p key={index} style={{ color: \"red\" }}>\r\n//                                         Invalid YouTube URL\r\n//                                     </p>\r\n//                                 );\r\n//                             })\r\n//                         )}\r\n//                     </div>\r\n//                 ))\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default CourseList;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}